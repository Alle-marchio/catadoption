# Generated by Django 4.2.20 on 2025-05-04 18:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone number')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('staff', 'Shelter Staff'), ('adopter', 'Adopter')], default='adopter', max_length=10, verbose_name='Role')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/', verbose_name='Profile photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age in months')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('breed', models.CharField(blank=True, max_length=100, null=True, verbose_name='Breed')),
                ('color', models.CharField(max_length=100, verbose_name='Color')),
                ('description', models.TextField(verbose_name='Description')),
                ('health_status', models.TextField(blank=True, verbose_name='Health status')),
                ('vaccinated', models.BooleanField(default=False, verbose_name='Vaccinated')),
                ('neutered', models.BooleanField(default=False, verbose_name='Neutered/Spayed')),
                ('history', models.TextField(blank=True, verbose_name='Personal history')),
                ('personality', models.TextField(blank=True, verbose_name='Personality')),
                ('arrival_date', models.DateField(verbose_name='Arrival date')),
                ('adoption_status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('adopted', 'Adopted')], default='available', max_length=10, verbose_name='Adoption status')),
            ],
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('opening_hours', models.TextField(blank=True, verbose_name='Opening hours')),
                ('staff', models.ManyToManyField(blank=True, limit_choices_to={'role': 'staff'}, related_name='staffed_shelters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='Published date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images/', verbose_name='Image')),
                ('is_published', models.BooleanField(default=True, verbose_name='Published')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('date', models.DateTimeField(verbose_name='Date and time')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='purrfect_homes.shelter')),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_type', models.CharField(choices=[('money', 'Money'), ('food', 'Food'), ('supplies', 'Supplies'), ('other', 'Other')], max_length=10, verbose_name='Donation type')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Donation date')),
                ('message', models.TextField(blank=True, verbose_name='Message')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Anonymous')),
                ('donor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donations', to=settings.AUTH_USER_MODEL)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='purrfect_homes.shelter')),
            ],
        ),
        migrations.CreateModel(
            name='CatPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cat_photos/', verbose_name='Image')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary photo')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Caption')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded at')),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='purrfect_homes.cat')),
            ],
        ),
        migrations.AddField(
            model_name='cat',
            name='shelter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='purrfect_homes.shelter'),
        ),
        migrations.CreateModel(
            name='AdoptionRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_date', models.DateTimeField(auto_now_add=True, verbose_name='Request date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('living_situation', models.TextField(help_text='Describe your home, yard, etc.', verbose_name='Living situation')),
                ('experience', models.TextField(help_text='Previous experience with pets', verbose_name='Experience with pets')),
                ('reason', models.TextField(help_text='Why do you want to adopt this cat?', verbose_name='Reason for adoption')),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adoption_requests', to='purrfect_homes.cat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adoption_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Adoption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adoption_date', models.DateField(verbose_name='Adoption date')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('processed_by', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'staff']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_adoptions', to=settings.AUTH_USER_MODEL)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adoption', to='purrfect_homes.adoptionrequest')),
            ],
        ),
    ]
